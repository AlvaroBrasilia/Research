---
swagger: "2.0"
info:
  description: "Swagger documentation for ClientDemo Service Layer API"
  version: "1.0.0"
  title: "DemoClient"
  contact:
    email: "alvaro.brasilia@gmail.com"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "Client"
  description: "Client Services"
schemes:
- "http"
- "https"
paths:
  /client:
    get:
      tags:
      - "Client"
      summary: "Get the list of clients"
      description: "Get the list of clients"
      operationId: "list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Number of rows to skip"
        required: false
        type: "integer"
        default: 0
      - name: "limit"
        in: "query"
        description: "Number of rows to fetch"
        required: false
        type: "integer"
        default: 10
      - name: "sort"
        in: "query"
        description: "Sort object to list data as string"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ClientCollectionResponse"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
      security:
      - Bearer: []
      x-security-scopes:
      - "admin"
      x-swagger-router-controller: "Client"
    post:
      tags:
      - "Client"
      summary: "Add a new client"
      description: "Add a new client"
      operationId: "create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Client properties"
        required: true
        schema:
          $ref: "#/definitions/ClientCreate"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessResponse"
        405:
          description: "Invalid input"
      security:
      - Bearer: []
      x-security-scopes:
      - "admin"
      x-swagger-router-controller: "Client"
  /client/{id}:
    get:
      tags:
      - "Client"
      summary: "Find client by ID"
      description: "Returns a single client"
      operationId: "getById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of client to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ClientResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Not found"
      security:
      - Bearer: []
      x-security-scopes:
      - "admin"
      x-swagger-router-controller: "Client"
    post:
      tags:
      - "Client"
      summary: "Update a client details"
      description: ""
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of client that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Client properties"
        required: true
        schema:
          $ref: "#/definitions/ClientCreate"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessResponse"
        405:
          description: "Invalid input"
      security:
      - Bearer: []
      x-security-scopes:
      - "admin"
      x-swagger-router-controller: "Client"
    delete:
      tags:
      - "Client"
      summary: "Deletes a client"
      description: ""
      operationId: "deleteById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Client id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Client not found"
      security:
      - Bearer: []
      x-security-scopes:
      - "admin"
      x-swagger-router-controller: "Client"
securityDefinitions:
  Bearer:
    description: "The following syntax must be used in the Authorization header xxxxxx.yyyyyyy.zzzzzz"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Client:
    type: "object"
    properties:
      _id:
        type: "string"
        example: "000001"
      first_name:
        type: "string"
        example: "Alvaro Luiz"
      last_name:
        type: "string"
        example: "Andrade"
      email:
        type: "string"
        example: "alvaro.brasilia@gmail.com"
      status:
        type: "string"
        example: "Online"
    example:
      first_name: "Alvaro Luiz"
      last_name: "Andrade"
      email: "alvaro.brasilia@gmail.com"
      status: "Online"
  ClientCreate:
    type: "object"
    required:
    - "email"
    - "first_name"
    - "last_name"
    properties:
      first_name:
        type: "string"
        example: "Alvaro Luiz"
      last_name:
        type: "string"
        example: "Andrade"
      email:
        type: "string"
        example: "alvaro.brasilia@gmail.com"
      status:
        type: "string"
        example: "Online"
    example:
      first_name: "Alvaro Luiz"
      last_name: "Andrade"
      email: "alvaro.brasilia@gmail.com"
      status: "Online"
  ClientResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 200
      message:
        type: "string"
        example: "Success"
      data:
        $ref: "#/definitions/Client"
    example:
      code: 200
      data:
        first_name: "Alvaro Luiz"
        last_name: "Andrade"
        email: "alvaro.brasilia@gmail.com"
        status: "Online"
      message: "Success"
  ClientCollectionResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 200
      message:
        type: "string"
        example: "Success"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Client"
    example:
      code: 200
      data:
      - first_name: "Alvaro Luiz"
        last_name: "Andrade"
        email: "alvaro.brasilia@gmail.com"
        status: "Online"
      - first_name: "Alvaro Luiz"
        last_name: "Andrade"
        email: "alvaro.brasilia@gmail.com"
        status: "Online"
      message: "Success"
  SuccessResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 200
      message:
        type: "string"
        example: "Success"
    example:
      code: 200
      message: "Success"
